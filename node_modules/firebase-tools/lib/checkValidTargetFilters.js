"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.checkValidTargetFilters = void 0;
const _ = require("lodash");
const error_1 = require("./error");
function checkValidTargetFilters(options) {
    function numFilters(targetTypes) {
        return _.filter(options.only, (opt) => {
            const optChunks = opt.split(":");
            return _.includes(targetTypes, optChunks[0]) && optChunks.length > 1;
        }).length;
    }
    function targetContainsFilter(targetTypes) {
        return numFilters(targetTypes) > 1;
    }
    function targetDoesNotContainFilter(targetTypes) {
        return numFilters(targetTypes) === 0;
    }
    return new Promise((resolve, reject) => {
        if (!options.only) {
            return resolve();
        }
        if (options.except) {
            return reject(new error_1.FirebaseError("Cannot specify both --only and --except"));
        }
        if (targetContainsFilter(["database", "storage", "hosting"])) {
            return reject(new error_1.FirebaseError("Filters specified with colons (e.g. --only functions:func1,functions:func2) are only supported for functions"));
        }
        if (targetContainsFilter(["functions"]) && targetDoesNotContainFilter(["functions"])) {
            return reject(new error_1.FirebaseError('Cannot specify "--only functions" and "--only functions:<filter>" at the same time'));
        }
        return resolve();
    });
}
exports.checkValidTargetFilters = checkValidTargetFilters;
